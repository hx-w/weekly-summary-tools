# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - uses: actions/cache@v2
        if: startsWith(runner.os, 'Windows')
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: install requirements
        run: |
          pip3 install -r py/requirements.txt
          pip3 install pyinstaller
      
      - name: build py exe
        run: |
          pyinstaller -F py/api_server.py
          cp ./dist/api_server.exe ./bin
      
      # step2: install node env
      - name: Install Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 16

      # - name: build electron
        # uses: samuelmeuli/action-electron-builder@v1
        # with:
        #   github_token: ${{ secrets.github_token }}
        #   build_script_name: electron:build
      - name: build electron
        run: |
          npm install
          npm run electron:build

      - name: upload
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            build/win-unpacked